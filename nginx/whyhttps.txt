迁移https原因：
HTTP缺点：
通信使用明文（未加密的报文），内容可能会被窃听：即使是加密处理的通信，也会被窥视到通信内容，这点和未加密的通信是一样的。
只是说如果通信经过加密，就有可能让人无法破解报文信息的含义，但加密处理后的报文信息本身还是会被看到。

不验证通信方的身份就可能遭遇伪装：HTTP协议的实现本身非常简单，不论是谁发来的请求都会返回响应。
但是通过SSL可以查明对手的证书。（伪造证书是一件异常困难的事情）

无法证明报文的完整性，可能已被篡改：虽然HTTP有MD5等校验算法，但是MD5本身也可能被修改，这样的话，用户完全察觉不到。
为了防止弊端，有必要使用HTTPS。

HTTP＋加密＋认证＋完整性保护＝HTTPS

HTTPS是安全的 
   
HTTPS 速度是快的 
上面我曾提到HTTPS“遭罪似的慢” , 但事实则几乎完全相反. 
HTTPS 确实需要更多的CPU来中断 SSL 连接 — 这需要的处理能力对于现代计算机而言是小菜一碟了.  
你会遇到SSL性能瓶颈的可能性完全为0. 
目前你更有可能在你的应用程序或者web服务器性能上遇到瓶颈.   

HTTPS 是一个重要的保障 
虽然 HTTPS 并不放之四海而皆准的web安全方案，但是没有它你就不能以策万全. 
所有的web安全都倚赖你拥有了 HTTPS.  如果你没有它, 那么不管你对你的密码做了多强的哈希加密，
或者做了多少数据加密，攻击者都可以简单的模拟一个客户端的网络连接，读取它们的安全凭证——然后轰的一声——你的安全小把戏结束了. 
因此 — 虽然你不能有赖于HTTPS解决所有的安全问题，你绝对100%需要将其应用于你构建的所有服务上 — 
否则完全没有任何办法保证你的应用程序的安全. 此外，虽然证书签名很显然不是一个完美的实践，
但每一种浏览器厂商针对认证机构都有相当严格和严谨的规则. 要成为一个受到信任的认证机构是非常难的，
而且要保持自己良好的信誉也同样是困难的. Mozilla (以及其其他厂商) 在将不良根认证机构踢出局这项工作方面表现相当出色，
而且一般也真正是互联网安全的好管家.  

HTTPS 流量拦截是可以避免的 
先前我提到过，可以很容易的通过创建属于你自己的SSL证书、信任它们，从而在SSL通讯的中途拦截到流量. 
虽然这绝对有可能，但也很容易可以通过 SSL 证书来避免 . 
本质上讲，依照上面链接的文章中给出的准则, 你可以是的你的客户只去信任真正可用的SSL证书，
有效的阻挡所有类型的SSL MITM攻击，甚至在它们开始之前 =) 如果你是要把SSL服务部署到一个不受信任的位置(像是一个移动或者桌面应用), 
你最应该考虑使用SSL证书钢钉.   

HTTP 在私有网络上并不是安全的 
早些时候，我谈到HTTP的安全性怎么是不重要的，特别是如果你的网络被锁上（这里的意思是切断了同公共网络的联系） — 我是在骗你。
而网络安全是重要的，传输的加密也是！ 如果一个攻击者获得了对你的任何内部服务的访问权限，所有的HTTP流量都将会被拦截和解读, 
不管你的网络可能会有多“安全”. 这很不妙哦。 这就是为什么 HTTPS 不管是在公共网络还是私有网络都极其重要的原因。 
额外的信息: 如果你是吧服务部署在AWS上面，就不要想让你的网络流量是私有的了!  
AWS 网络就是公共的，这意味着其它的AWS用户都潜在的能够嗅探到你的网络流量 — 要非常小心了。  

为什么不一直使用HTTPS

加密通信会消耗更多的CPU和内存资源 加密证书购买的成本。
现在大多非敏感信息使用HTTP通信，包含个人信息的敏感数据，才会利用HTTPS加密通信。

HTTP的优点

速度快，效率高：如果使用加密，必然密集使用CPU，那么就会拖慢处理速度
研究表明，https会让页面加载时间增加50%，耗电增加10%到20%，此外，https还会影响缓存，增加数据开销和功耗，并会影响已有的安全措施。

