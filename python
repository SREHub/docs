python使用字典传递参数
变长普通参数
变长普通参数只需要在参数前面放一个*号即可，在函数体内部把形参当作一个参数链表或元组来处理即可，
当函数使用了变长普通参数进行参数传递时，我们把不知道元素个数的链表或元组当做参数传递给它，
只是在参数传递时需要对链表或元组进行unpack，即在相应参数前面加*号。
  foo(1,2,3,"good")
  arglist = 1,2,3,"good"
  foo(*arglist)
  
要注意的是在函数定义时变长参数（包括后面介绍的变长关键字参数）必须设置在定长参数后面。

变长关键字参数
变长关键字长参数类似于变长普通参数，只是变长关键字参数在函数定义时在参数前面加两个*号，
在函数体内部把参数当作一个参数字典来处理，并且在函数调用时可以把一个字典当作参数传递给它，
同样也需要对字典进行unpack，即在字典参数前面加**.

  fun4(Name="Jim", Age=22， Sex="Male")
  argDict = {Name:"Jim", Age:22, Sex:"Male"}
  fun4(**argDict)
对于变长关键字参数，我们可以任意指定关键字的名字，函数调用的内部会去获取关键字的名字和值。

复合参数
在实际编程的过程当中，我们可能面临这样一种情况，函数定义时不能够确定会接受到什么样参数，包括参数的数目，参数的类型等，这个时候，
我们就会用到这里介绍的复合参数，复合参数及前面介绍的四种参数的混搭形式。

只是在函数定义时对参数的顺序特定的要求：

关键字参数必须在普通参数后面
变长普通参数必须放在定长参数的后面
变长关键字参数必须放在变长普通参数的后面
